components:
  schemas:
    api.HTTPError:
      properties:
        data: {}
        error:
          type: integer
        msg:
          type: string
        status:
          type: integer
      type: object
    api.Response:
      allOf:
      - $ref: '#/components/schemas/data'
      properties:
        data: {}
        msg:
          type: string
        status:
          type: integer
      type: object
    data:
      properties:
        data:
          $ref: '#/components/schemas/models.User'
      type: object
    models.AddApplicationForm:
      properties:
        client_key:
          type: string
        client_secret:
          type: string
        description:
          type: string
        display_name:
          type: string
        id:
          type: string
        name:
          type: string
        redirect_uri:
          type: string
      type: object
    models.AddRoleForm:
      properties:
        app_id:
          type: string
        id:
          type: string
        menus:
          items:
            $ref: '#/components/schemas/models.RoleMenu'
          type: array
          uniqueItems: false
        name:
          type: string
        status:
          description: '0: disabled 1: enabled'
          type: string
      type: object
    models.Application:
      properties:
        client_key:
          type: string
        client_secret:
          type: string
        created_at:
          description: Create time
          type: string
        description:
          type: string
        display_name:
          type: string
        id:
          type: string
        menus: {}
        name:
          type: string
        redirect_uri:
          type: string
        roles:
          items:
            $ref: '#/components/schemas/models.Role'
          type: array
          uniqueItems: false
        updated_at:
          description: Update time
          type: string
      type: object
    models.LoginForm:
      properties:
        ignoreSyncCasbin:
          type: boolean
        password:
          form: password
          type: string
        username:
          form: username
          type: string
        verify_code:
          form: verify_code
          type: string
      type: object
    models.Menu:
      properties:
        app_id:
          type: string
        children:
          description: sub level menus
          items:
            $ref: '#/components/schemas/models.Menu'
          type: array
          uniqueItems: false
        code:
          type: string
        created_at:
          description: Create time
          type: string
        description:
          type: string
        id:
          type: string
        name:
          type: string
        parent:
          description: parent id
          type: string
        parent_path:
          type: string
        path:
          type: string
        resources:
          items:
            $ref: '#/components/schemas/models.Resource'
          type: array
          uniqueItems: false
        updated_at:
          description: Update time
          type: string
      type: object
    models.MenuForm:
      properties:
        app_id:
          type: string
        code:
          type: string
        description:
          type: string
        id:
          type: string
        name:
          type: string
        parent_id:
          type: string
        parent_path:
          type: string
        path:
          type: string
        resources:
          items:
            $ref: '#/components/schemas/models.Resource'
          type: array
          uniqueItems: false
      type: object
    models.Resource:
      properties:
        created_at:
          description: Create time
          type: string
        id:
          type: string
        method:
          type: string
        owner:
          description: From Menu.ID
          type: string
        path:
          type: string
        updated_at:
          description: Update time
          type: string
      type: object
    models.Role:
      properties:
        app_id:
          description: From Application.ID
          type: string
        created_at:
          description: Create time
          type: string
        id:
          type: string
        menus: {}
        name:
          type: string
        status:
          type: string
        updated_at:
          description: Update time
          type: string
      type: object
    models.RoleMenu:
      properties:
        created_at:
          description: Create time
          type: string
        id:
          type: string
        menu:
          $ref: '#/components/schemas/models.Menu'
        menu_id:
          type: string
        role_id:
          type: string
        updated_at:
          description: Update time
          type: string
      type: object
    models.User:
      properties:
        apps:
          description: Apps of user
          items:
            $ref: '#/components/schemas/models.UserApp'
          type: array
          uniqueItems: false
        created_at:
          description: Create time
          type: string
        email:
          type: string
        groups:
          items:
            type: string
          type: array
          uniqueItems: false
        id:
          type: string
        name:
          type: string
        phone:
          type: string
        roles:
          description: Roles of user
          items:
            $ref: '#/components/schemas/models.UserRole'
          type: array
          uniqueItems: false
        signup_app:
          description: From Application.ID
          type: string
        status:
          type: string
        updated_at:
          description: Update time
          type: string
        username:
          type: string
      type: object
    models.UserApp:
      properties:
        app_id:
          type: string
        created_at:
          description: Create time
          type: string
        id:
          type: string
        updated_at:
          description: Update time
          type: string
        user_id:
          type: string
      type: object
    models.UserForm:
      properties:
        apps:
          items:
            $ref: '#/components/schemas/models.UserApp'
          type: array
          uniqueItems: false
        email:
          description: Email of user
          maxLength: 128
          type: string
        id:
          type: string
        ignoreSyncCasbin:
          type: boolean
        name:
          description: Name of user
          maxLength: 64
          type: string
        password:
          description: Password for login (md5 hash)
          maxLength: 64
          type: string
        phone:
          description: Phone number of user
          maxLength: 32
          type: string
        roles:
          items:
            $ref: '#/components/schemas/models.UserRole'
          type: array
          uniqueItems: false
        status:
          description: Status of user (activated, freezed)
          enum:
          - activated
          - freezed
          type: string
        username:
          description: Username for login
          maxLength: 64
          type: string
      required:
      - name
      - roles
      - status
      - username
      type: object
    models.UserRole:
      properties:
        app_id:
          description: From Application.ID
          type: string
        created_at:
          description: Create time
          type: string
        id:
          type: string
        role:
          $ref: '#/components/schemas/models.Role'
        role_id:
          type: string
        updated_at:
          description: Update time
          type: string
        user_id:
          description: From User.ID
          type: string
      type: object
externalDocs:
  description: ""
  url: ""
info:
  contact:
    email: xulingming@xao.ac.cn
    name: Huxulm
    url: https://gitlab.xaotos.cn/xulingming
  description: ACMIN API
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: ACMIN API
  version: "1.0"
openapi: 3.1.0
paths:
  /v1/apps:
    get:
      description: get paginated apps
      parameters:
      - description: Application ID
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: page for quering
        in: query
        name: page
        schema:
          type: integer
      - description: page size for quering
        in: query
        name: size
        schema:
          type: integer
      - description: Whether to include roles
        in: query
        name: include_roles
        schema:
          type: boolean
      - description: Whether to include menus
        in: query
        name: include_menus
        schema:
          type: boolean
      - description: Whether to include resources
        in: query
        name: include_resources
        schema:
          type: boolean
      - description: Whether to show menus using tree
        in: query
        name: menu_tree
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.Response'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.HTTPError'
          description: Internal Server Error
      security:
      - CookieAuth: []
      summary: 分页查询 APP
      tags:
      - Applications
    post:
      description: add app
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/models.AddApplicationForm'
        description: create app
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/data'
                properties:
                  data: {}
                  msg:
                    type: string
                  status:
                    type: integer
                type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.HTTPError'
          description: Internal Server Error
      security:
      - CookieAuth: []
      summary: 新增应用
      tags:
      - Applications
  /v1/apps/{id}:
    delete:
      description: delete app
      parameters:
      - description: Application ID
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/data'
                properties:
                  data: {}
                  msg:
                    type: string
                  status:
                    type: integer
                type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.HTTPError'
          description: Internal Server Error
      security:
      - CookieAuth: []
      summary: 删除应用
      tags:
      - Applications
    get:
      description: query app
      parameters:
      - description: Application ID
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Whether to include roles
        in: query
        name: include_roles
        schema:
          type: boolean
      - description: Whether to include menus
        in: query
        name: include_menus
        schema:
          type: boolean
      - description: Whether to include resources
        in: query
        name: include_resources
        schema:
          type: boolean
      - description: Whether to show menus using tree
        in: query
        name: menu_tree
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/data'
                properties:
                  data: {}
                  msg:
                    type: string
                  status:
                    type: integer
                type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.HTTPError'
          description: Internal Server Error
      security:
      - CookieAuth: []
      summary: 查询APP(通过 ID)
      tags:
      - Applications
    put:
      description: update app
      parameters:
      - description: Application ID
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.Response'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.HTTPError'
          description: Internal Server Error
      security:
      - CookieAuth: []
      summary: 更新应用
      tags:
      - Applications
  /v1/login:
    post:
      description: login
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/models.LoginForm'
        description: login
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/data'
                properties:
                  data: {}
                  msg:
                    type: string
                  status:
                    type: integer
                type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.HTTPError'
          description: Internal Server Error
      summary: 登录
      tags:
      - Account
  /v1/logout:
    post:
      description: logout
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/data'
                properties:
                  data: {}
                  msg:
                    type: string
                  status:
                    type: integer
                type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.HTTPError'
          description: Internal Server Error
      security:
      - CookieAuth: []
      summary: 登出
      tags:
      - Account
  /v1/me:
    get:
      description: get current login user info
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/data'
                properties:
                  data: {}
                  msg:
                    type: string
                  status:
                    type: integer
                type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.HTTPError'
          description: Internal Server Error
      security:
      - CookieAuth: []
      summary: 获取当前登录用户
      tags:
      - Account
  /v1/menus:
    get:
      description: get paginated menus
      parameters:
      - description: page for quering
        in: query
        name: page
        schema:
          type: integer
      - description: page size for quering
        in: query
        name: size
        schema:
          type: integer
      - description: app ID
        in: query
        name: app_id
        required: true
        schema:
          type: integer
      - description: Whether to include resources
        in: query
        name: includeResources
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.Response'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.HTTPError'
          description: Internal Server Error
      security:
      - CookieAuth: []
      tags:
      - Menus
    post:
      description: add menu
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/models.MenuForm'
        description: create menu
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/data'
                properties:
                  data: {}
                  msg:
                    type: string
                  status:
                    type: integer
                type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.HTTPError'
          description: Internal Server Error
      security:
      - CookieAuth: []
      tags:
      - Menus
  /v1/menus/{id}:
    delete:
      description: delete menu
      parameters:
      - description: Menu ID
        in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/data'
                properties:
                  data: {}
                  msg:
                    type: string
                  status:
                    type: integer
                type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.HTTPError'
          description: Internal Server Error
      security:
      - CookieAuth: []
      tags:
      - Menus
    get:
      description: query menu by id
      parameters:
      - description: Menu ID
        in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/data'
                properties:
                  data: {}
                  msg:
                    type: string
                  status:
                    type: integer
                type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.HTTPError'
          description: Internal Server Error
      security:
      - CookieAuth: []
      tags:
      - Menus
    put:
      description: update menu
      parameters:
      - description: Menu ID
        in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.Response'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.HTTPError'
          description: Internal Server Error
      security:
      - CookieAuth: []
      tags:
      - Menus
  /v1/roles:
    get:
      description: get paginated roles
      parameters:
      - description: app ID
        in: query
        name: app_id
        required: true
        schema:
          type: string
      - description: page for quering
        in: query
        name: page
        schema:
          type: integer
      - description: page size for quering
        in: query
        name: size
        schema:
          type: integer
      - description: Whether to include resources
        in: query
        name: include_resources
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.Response'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.HTTPError'
          description: Internal Server Error
      security:
      - CookieAuth: []
      tags:
      - Roles
    post:
      description: add role
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/models.AddRoleForm'
        description: create role
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/data'
                properties:
                  data: {}
                  msg:
                    type: string
                  status:
                    type: integer
                type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.HTTPError'
          description: Internal Server Error
      security:
      - CookieAuth: []
      tags:
      - Roles
  /v1/roles/{id}:
    delete:
      description: delete role
      parameters:
      - description: Role ID
        in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/data'
                properties:
                  data: {}
                  msg:
                    type: string
                  status:
                    type: integer
                type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.HTTPError'
          description: Internal Server Error
      security:
      - CookieAuth: []
      tags:
      - Roles
    get:
      description: query role
      parameters:
      - description: whether include menus
        in: query
        name: include_menus
        schema:
          type: boolean
      - description: Role ID
        in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/data'
                properties:
                  data: {}
                  msg:
                    type: string
                  status:
                    type: integer
                type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.HTTPError'
          description: Internal Server Error
      security:
      - CookieAuth: []
      tags:
      - Roles
    put:
      description: update role
      parameters:
      - description: Role ID
        in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/models.AddRoleForm'
        description: update role
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.Response'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.HTTPError'
          description: Internal Server Error
      security:
      - CookieAuth: []
      tags:
      - Roles
  /v1/users:
    get:
      description: get paginated users
      parameters:
      - description: page for quering
        in: query
        name: page
        schema:
          type: integer
      - description: page size for quering
        in: query
        name: size
        schema:
          type: integer
      - description: User ID
        in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.Response'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.HTTPError'
          description: Internal Server Error
      security:
      - CookieAuth: []
      summary: 分页查询用户
      tags:
      - Account
  /v1/users/{id}:
    delete:
      description: delete user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/data'
                properties:
                  data: {}
                  msg:
                    type: string
                  status:
                    type: integer
                type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.HTTPError'
          description: Internal Server Error
      security:
      - CookieAuth: []
      summary: 删除用户
      tags:
      - Account
    get:
      description: query user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/data'
                properties:
                  data: {}
                  msg:
                    type: string
                  status:
                    type: integer
                type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.HTTPError'
          description: Internal Server Error
      security:
      - CookieAuth: []
      summary: 查询用户
      tags:
      - Account
    put:
      description: update user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.Response'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.HTTPError'
          description: Internal Server Error
      security:
      - CookieAuth: []
      summary: 更新用户
      tags:
      - Account
  /v1/users/add:
    post:
      description: create an user account
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/models.UserForm'
        description: create user
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/data'
                properties:
                  data: {}
                  msg:
                    type: string
                  status:
                    type: integer
                type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.HTTPError'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.HTTPError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.HTTPError'
          description: Internal Server Error
      security:
      - CookieAuth: []
      summary: 新增用户
      tags:
      - Account
servers:
- url: http://127.0.0.1:8090/v1
